// Code generated by protoc-gen-go. DO NOT EDIT.
// source: watch_mgr.proto

package watch_mgr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type File struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Recursive            bool     `protobuf:"varint,2,opt,name=recursive,proto3" json:"recursive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_24600654b1cc554f, []int{0}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetRecursive() bool {
	if m != nil {
		return m.Recursive
	}
	return false
}

type SyncFile struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Recursive            bool     `protobuf:"varint,2,opt,name=recursive,proto3" json:"recursive,omitempty"`
	Ip                   string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32    `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	User                 string   `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Password             string   `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	RemotePath           string   `protobuf:"bytes,7,opt,name=remotePath,proto3" json:"remotePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncFile) Reset()         { *m = SyncFile{} }
func (m *SyncFile) String() string { return proto.CompactTextString(m) }
func (*SyncFile) ProtoMessage()    {}
func (*SyncFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_24600654b1cc554f, []int{1}
}

func (m *SyncFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncFile.Unmarshal(m, b)
}
func (m *SyncFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncFile.Marshal(b, m, deterministic)
}
func (m *SyncFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncFile.Merge(m, src)
}
func (m *SyncFile) XXX_Size() int {
	return xxx_messageInfo_SyncFile.Size(m)
}
func (m *SyncFile) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncFile.DiscardUnknown(m)
}

var xxx_messageInfo_SyncFile proto.InternalMessageInfo

func (m *SyncFile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SyncFile) GetRecursive() bool {
	if m != nil {
		return m.Recursive
	}
	return false
}

func (m *SyncFile) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *SyncFile) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *SyncFile) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *SyncFile) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SyncFile) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

type FileEvent struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileEvent) Reset()         { *m = FileEvent{} }
func (m *FileEvent) String() string { return proto.CompactTextString(m) }
func (*FileEvent) ProtoMessage()    {}
func (*FileEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_24600654b1cc554f, []int{2}
}

func (m *FileEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileEvent.Unmarshal(m, b)
}
func (m *FileEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileEvent.Marshal(b, m, deterministic)
}
func (m *FileEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileEvent.Merge(m, src)
}
func (m *FileEvent) XXX_Size() int {
	return xxx_messageInfo_FileEvent.Size(m)
}
func (m *FileEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_FileEvent.DiscardUnknown(m)
}

var xxx_messageInfo_FileEvent proto.InternalMessageInfo

func (m *FileEvent) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SyncFileResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Output               string   `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	Error                string   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncFileResp) Reset()         { *m = SyncFileResp{} }
func (m *SyncFileResp) String() string { return proto.CompactTextString(m) }
func (*SyncFileResp) ProtoMessage()    {}
func (*SyncFileResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_24600654b1cc554f, []int{3}
}

func (m *SyncFileResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncFileResp.Unmarshal(m, b)
}
func (m *SyncFileResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncFileResp.Marshal(b, m, deterministic)
}
func (m *SyncFileResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncFileResp.Merge(m, src)
}
func (m *SyncFileResp) XXX_Size() int {
	return xxx_messageInfo_SyncFileResp.Size(m)
}
func (m *SyncFileResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncFileResp.DiscardUnknown(m)
}

var xxx_messageInfo_SyncFileResp proto.InternalMessageInfo

func (m *SyncFileResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SyncFileResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SyncFileResp) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *SyncFileResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*File)(nil), "File")
	proto.RegisterType((*SyncFile)(nil), "SyncFile")
	proto.RegisterType((*FileEvent)(nil), "FileEvent")
	proto.RegisterType((*SyncFileResp)(nil), "SyncFileResp")
}

func init() { proto.RegisterFile("watch_mgr.proto", fileDescriptor_24600654b1cc554f) }

var fileDescriptor_24600654b1cc554f = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x4f, 0x4b, 0xc3, 0x30,
	0x18, 0xc6, 0x4d, 0x5d, 0xb7, 0xe6, 0xc5, 0x7f, 0xbc, 0x88, 0x84, 0x21, 0x32, 0x02, 0xc2, 0x4e,
	0x65, 0xe8, 0xc5, 0xab, 0x07, 0xbd, 0x29, 0x12, 0x0f, 0x1e, 0xb5, 0xb6, 0x61, 0x2b, 0xd8, 0x26,
	0xbc, 0x49, 0x37, 0xfc, 0x56, 0x7e, 0x44, 0x49, 0xba, 0xce, 0x9d, 0x3d, 0xf5, 0x79, 0x9e, 0xbe,
	0x09, 0xbf, 0x27, 0x2f, 0x9c, 0x6e, 0x0a, 0x5f, 0xae, 0xde, 0x9b, 0x25, 0xe5, 0x96, 0x8c, 0x37,
	0xf2, 0x0e, 0x46, 0x8f, 0xf5, 0x97, 0x46, 0x84, 0x51, 0x5b, 0x34, 0x5a, 0xb0, 0x19, 0x9b, 0x73,
	0x15, 0x35, 0x5e, 0x02, 0x27, 0x5d, 0x76, 0xe4, 0xea, 0xb5, 0x16, 0xc9, 0x8c, 0xcd, 0x33, 0xf5,
	0x17, 0xc8, 0x1f, 0x06, 0xd9, 0xeb, 0x77, 0x5b, 0xfe, 0xef, 0x38, 0x9e, 0x40, 0x52, 0x5b, 0x71,
	0x18, 0xe7, 0x93, 0xda, 0x86, 0x1b, 0xac, 0x21, 0x2f, 0x46, 0x33, 0x36, 0x4f, 0x55, 0xd4, 0x21,
	0xeb, 0x9c, 0x26, 0x91, 0xf6, 0xb7, 0x06, 0x8d, 0x53, 0xc8, 0x6c, 0xe1, 0xdc, 0xc6, 0x50, 0x25,
	0xc6, 0x31, 0xdf, 0x79, 0xbc, 0x02, 0x20, 0xdd, 0x18, 0xaf, 0x5f, 0x0a, 0xbf, 0x12, 0x93, 0xf8,
	0x77, 0x2f, 0x91, 0xd7, 0xc0, 0x03, 0xed, 0xc3, 0x5a, 0xb7, 0x1e, 0x05, 0x4c, 0x1a, 0xed, 0x5c,
	0xb1, 0x1c, 0xa8, 0x07, 0x2b, 0x2b, 0x38, 0x1a, 0x8a, 0x29, 0xed, 0x22, 0x5a, 0x69, 0xaa, 0x7e,
	0x2c, 0x55, 0x51, 0x87, 0xec, 0x39, 0x14, 0x4e, 0x7a, 0xb4, 0xa0, 0xf1, 0x02, 0xc6, 0xa6, 0xf3,
	0xb6, 0xf3, 0xdb, 0x5a, 0x5b, 0x87, 0xe7, 0x90, 0x6a, 0x22, 0x43, 0xb1, 0x1b, 0x57, 0xbd, 0xb9,
	0xf9, 0x80, 0xec, 0x2d, 0x2c, 0xe3, 0x69, 0x49, 0x28, 0x81, 0xc7, 0xc5, 0xc4, 0xb7, 0x4c, 0xf3,
	0xf0, 0x99, 0x42, 0xbe, 0x63, 0x95, 0x07, 0x0b, 0x86, 0x0b, 0x38, 0xdb, 0xcd, 0xdc, 0xb7, 0x55,
	0x20, 0x44, 0x9e, 0x0f, 0xa0, 0xd3, 0xe3, 0x7c, 0x9f, 0x39, 0x9c, 0xf8, 0x1c, 0xc7, 0x15, 0xdf,
	0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x87, 0x70, 0x57, 0x2d, 0xf5, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WatchMgrClient is the client API for WatchMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WatchMgrClient interface {
	WatchFile(ctx context.Context, in *File, opts ...grpc.CallOption) (WatchMgr_WatchFileClient, error)
	WatchFileAndSync(ctx context.Context, in *SyncFile, opts ...grpc.CallOption) (WatchMgr_WatchFileAndSyncClient, error)
}

type watchMgrClient struct {
	cc *grpc.ClientConn
}

func NewWatchMgrClient(cc *grpc.ClientConn) WatchMgrClient {
	return &watchMgrClient{cc}
}

func (c *watchMgrClient) WatchFile(ctx context.Context, in *File, opts ...grpc.CallOption) (WatchMgr_WatchFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WatchMgr_serviceDesc.Streams[0], "/WatchMgr/watchFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &watchMgrWatchFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WatchMgr_WatchFileClient interface {
	Recv() (*FileEvent, error)
	grpc.ClientStream
}

type watchMgrWatchFileClient struct {
	grpc.ClientStream
}

func (x *watchMgrWatchFileClient) Recv() (*FileEvent, error) {
	m := new(FileEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *watchMgrClient) WatchFileAndSync(ctx context.Context, in *SyncFile, opts ...grpc.CallOption) (WatchMgr_WatchFileAndSyncClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WatchMgr_serviceDesc.Streams[1], "/WatchMgr/watchFileAndSync", opts...)
	if err != nil {
		return nil, err
	}
	x := &watchMgrWatchFileAndSyncClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WatchMgr_WatchFileAndSyncClient interface {
	Recv() (*SyncFileResp, error)
	grpc.ClientStream
}

type watchMgrWatchFileAndSyncClient struct {
	grpc.ClientStream
}

func (x *watchMgrWatchFileAndSyncClient) Recv() (*SyncFileResp, error) {
	m := new(SyncFileResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WatchMgrServer is the server API for WatchMgr service.
type WatchMgrServer interface {
	WatchFile(*File, WatchMgr_WatchFileServer) error
	WatchFileAndSync(*SyncFile, WatchMgr_WatchFileAndSyncServer) error
}

// UnimplementedWatchMgrServer can be embedded to have forward compatible implementations.
type UnimplementedWatchMgrServer struct {
}

func (*UnimplementedWatchMgrServer) WatchFile(req *File, srv WatchMgr_WatchFileServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchFile not implemented")
}
func (*UnimplementedWatchMgrServer) WatchFileAndSync(req *SyncFile, srv WatchMgr_WatchFileAndSyncServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchFileAndSync not implemented")
}

func RegisterWatchMgrServer(s *grpc.Server, srv WatchMgrServer) {
	s.RegisterService(&_WatchMgr_serviceDesc, srv)
}

func _WatchMgr_WatchFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(File)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WatchMgrServer).WatchFile(m, &watchMgrWatchFileServer{stream})
}

type WatchMgr_WatchFileServer interface {
	Send(*FileEvent) error
	grpc.ServerStream
}

type watchMgrWatchFileServer struct {
	grpc.ServerStream
}

func (x *watchMgrWatchFileServer) Send(m *FileEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _WatchMgr_WatchFileAndSync_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SyncFile)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WatchMgrServer).WatchFileAndSync(m, &watchMgrWatchFileAndSyncServer{stream})
}

type WatchMgr_WatchFileAndSyncServer interface {
	Send(*SyncFileResp) error
	grpc.ServerStream
}

type watchMgrWatchFileAndSyncServer struct {
	grpc.ServerStream
}

func (x *watchMgrWatchFileAndSyncServer) Send(m *SyncFileResp) error {
	return x.ServerStream.SendMsg(m)
}

var _WatchMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "WatchMgr",
	HandlerType: (*WatchMgrServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "watchFile",
			Handler:       _WatchMgr_WatchFile_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "watchFileAndSync",
			Handler:       _WatchMgr_WatchFileAndSync_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "watch_mgr.proto",
}
